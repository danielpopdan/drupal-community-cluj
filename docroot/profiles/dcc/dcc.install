<?php

/**
 * @file
 * Install, update and uninstall functions for the dcc installation profile.
 */

use Drupal\Core\Site\Settings;
use Drupal\user\Entity\User;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 *
 * @see system_install()
 */
function dcc_install() {
  global $config_directories;

  // Set the config sync directory.
  $config_directories[CONFIG_SYNC_DIRECTORY] = 'config/staging';
  $settings['config_directories'][CONFIG_SYNC_DIRECTORY] = (object) [
    'value' => $config_directories[CONFIG_SYNC_DIRECTORY],
    'required' => TRUE,
  ];
  if (!empty($settings)) {
    // Rewrite settings.php, which also sets the value as global variable.
    drupal_rewrite_settings($settings);
  }

  // Set front page to "node".
  \Drupal::configFactory()
    ->getEditable('system.site')
    ->set('page.front', '/node')
    ->save(TRUE);

  // Allow visitor account creation with administrative approval.
  $user_settings = \Drupal::configFactory()->getEditable('user.settings');
  $user_settings->set('register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL)
    ->save(TRUE);

  // Enable default permissions for system roles.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('access comments'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array(
    'access comments',
    'post comments',
    'skip comment approval',
  ));

  // Assign user 1 the "administrator" role.
  $user = User::load(1);
  $user->roles[] = 'administrator';
  $user->save();

  // Allow authenticated users to use shortcuts.
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('access shortcuts'));

  // Allow all users to use search.
  user_role_grant_permissions(RoleInterface::ANONYMOUS_ID, array('search content'));
  user_role_grant_permissions(RoleInterface::AUTHENTICATED_ID, array('search content'));

  // Enable the admin theme.
  \Drupal::configFactory()
    ->getEditable('node.settings')
    ->set('use_admin_theme', TRUE)
    ->save(TRUE);

  // Set the configurations UUID.
  $configurations = array(
    Settings::get('site_uuid') => 'system.site',
  );
  dcc_install_set_uuid($configurations);
}

/**
 * Set the UUID for this site.
 *
 * @param array $configurations
 *   The UUID => configuration name.
 */
function dcc_install_set_uuid($configurations) {
  foreach ($configurations as $uuid => $configuration) {
    \Drupal::configFactory()->getEditable($configuration)
      ->set('uuid', $uuid)
      ->save();
  }
}
