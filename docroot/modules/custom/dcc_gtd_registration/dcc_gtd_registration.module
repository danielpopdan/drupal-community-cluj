<?php

/**
 * @file
 * Contains hook implementations.
 */

use Drupal\Core\Asset\AttachedAssetsInterface;
use Drupal\Core\Access\AccessResult;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;

define('ACTIVATION_STATUS_PAGE', 'dcc_gtd_registration_activation_status_page');
define('GOOGLE_MAP_FIELD_NAME', 'dcc_gtd_regisration_google_map_field_name');
define('DATE_RANGE_WRAPPER', 'dcc_gtd_regisration_date_range_wrapper');
define('SPONSORED_BY', 'dcc_gtd_regisration_sponsored_by_logo');

/**
 * Implements hook_theme().
 *
 * {@inheritdoc}
 */
function dcc_gtd_registration_theme($existing, $type, $theme, $path) {
  return [
    ACTIVATION_STATUS_PAGE => [
      'variables' => [
        'first_name' => NULL,
        'last_name' => NULL,
        'message' => NULL,
      ],
      'template' => 'registration-activation-page',
    ],
    GOOGLE_MAP_FIELD_NAME => [
      'variables' => [
        'name' => NULL,
      ],
      'template' => 'google-map-field-name',
    ],
    DATE_RANGE_WRAPPER => [
      'variables' => [
        'children' => NULL,
      ],
      'template' => 'date-range-wrapper',
    ],
    SPONSORED_BY => [
      'variables' => [
        'children' => NULL,
        'link' => NULL,
      ],
      'template' => 'sponsored-by-logo',
    ],
  ];
}

/**
 * Implements hook_js_alter().
 *
 * {@inheritdoc}
 */
function dcc_gtd_registration_js_alter(&$javascript, AttachedAssetsInterface $assets) {
  $key = 'https://www.google.com/recaptcha/api.js';

  if (array_key_exists($key, $javascript)) {
    // Loads a language specific version of the recaptcha.
    $langCode = \Drupal::service('language_manager')
      ->getCurrentLanguage()
      ->getId();
    $javascript[$key]['data'] .= '?hl=' . $langCode;
  }
}

/**
 * Implements hook_node_access().
 *
 * {@inheritdoc}
 */
function dcc_gtd_registration_node_access(NodeInterface $node, $op, AccountInterface $account) {
  if (dcc_gtd_registration_node_view_conditions($node, $account)) {
    return AccessResult::forbidden();
  }
}

/**
 * Checks if the conditions are met for view permissions.
 *
 * @param \Drupal\node\NodeInterface $node
 *   The node entity.
 * @param \Drupal\Core\Session\AccountInterface $account
 *   The current user.
 *
 * @return bool
 *   Boolean value of the conditions.
 */
function dcc_gtd_registration_node_view_conditions(NodeInterface $node, AccountInterface $account) {
  return $node->getType() == 'global_training_day_registration' &&
    !$account->hasPermission('dcc gtd registration view access');
}
